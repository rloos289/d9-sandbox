#!/usr/bin/env bash

#: exec_target = cli

## Initialize/reinstall site
##
## Usage: fin init-site

# Abort if anything fails
set -e

# Set the colors that the console will use for output.
red='\033[0;31m'
green='\033[0;32m'
green_bg='\033[1;97;42m'
yellow='\033[1;33m'
NC='\033[0m'

echo-red () { echo -e "${red}$1${NC}"; }
echo-green () { echo -e "${green}$1${NC}"; }
echo-green-bg () { echo -e "${green_bg}$1${NC}"; }
echo-yellow () { echo -e "${yellow}$1${NC}"; }

#-------------------------- Settings --------------------------------

# PROJECT_ROOT and DOCROOT are set as env variables in cli using .docksal/docksal.env
SITE_DIRECTORY="default"
DOCROOT_PATH="${PROJECT_ROOT}/${DOCROOT}"
SITEDIR_PATH="${DOCROOT_PATH}/sites/${SITE_DIRECTORY}"

#-------------------------- END: Settings --------------------------------

#-------------------------- Helper functions --------------------------------

# Run composer install from the project root to install dependencies.
composer_install ()
{
	cd "$PROJECT_ROOT"
	composer install
}

# Fix file/folder permissions
fix_permissions ()
{
	chmod 755 "${SITEDIR_PATH}"
}

# Copy a settings file.
# Skips if the destination file already exists.
# @param $1 source file
# @param $2 destination file
copy_settings_file()
{
	local source="$1"
	local dest="$2"

	if [[ ! -f $dest ]]; then
		echo "Copying ${dest}..."
		cp $source $dest
	else
		echo "${dest} already in place."
	fi
}

# Initialize local settings files.
init_settings ()
{
	# drupal-composer/drupal-project creates settings.php from default.settings.php.
	# Since we supply our own settings.php below, we have to drop the default file first.
	rm -f "${SITEDIR_PATH}/settings.php"

	copy_settings_file "${PROJECT_ROOT}/.docksal/settings/settings.php" "${SITEDIR_PATH}/settings.php"
	copy_settings_file "${PROJECT_ROOT}/.docksal/settings/settings.local.php" "${SITEDIR_PATH}/settings.local.php"
}

# Install drupal from project root
site_install ()
{
	cd "$DOCROOT_PATH"
	# While this is techincally using the minimal install profile, all of the config
	# its using is from standard. This is because of a bug encountered with the
	# shortcuts module (Which has been removed from the config)
	drush site-install minimal --existing-config --account-pass="admin" --site-name='d9-sandbox' -y
}

#-------------------------- END: Helper Functions --------------------------------

#-------------------------- Execution --------------------------------

# Project initialization steps using all of the functions written above
echo -e "${green_bg} Step 3 ${NC}${green} Running composer install...${NC}"
time -p composer_install
echo -e "${green_bg} Step 4 ${NC}${green} Making site directory writable... ${NC}"
fix_permissions
echo -e "${green_bg} Step 5 ${NC}${green} Organizing settings.php files... ${NC}"
init_settings
echo -e "${green_bg} Step 6 ${NC}${green} Installing Drupal... ${NC}"
time -p site_install

echo -e "Open ${yellow}http://${VIRTUAL_HOST}${NC} in your browser to verify the setup."
echo-yellow "Open ${yellow}http://${VIRTUAL_HOST}${NC}/user/login to log in with user:admin password:admin."

#-------------------------- END: Execution --------------------------------
